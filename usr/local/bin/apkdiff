#!/bin/bash

# Function to handle file comparison and merging in interactive mode
compare_and_merge_interactive() {
    local orig_file="$1"
    local new_file="$2"

    echo "Comparing $orig_file with $new_file"

    # If the original file exists, compare it with the new file using Emacs ediff
    if [ -e "$orig_file" ]; then
        /usr/local/bin/emacs_as_user.sh -nw --eval "(ediff-files \"$orig_file\" \"$new_file\")"
        # /usr/local/bin/ediff_as_root.sh "$orig_file" "$new_file"
    else
        echo "Original file $orig_file does not exist. You might want to manually handle $new_file."
    fi
}

# Function to handle file comparison and merging in batch mode
compare_and_merge_batch() {
    local orig_file="$1"
    local new_file="$2"

    echo "Comparing $orig_file with $new_file"

    # If the original file exists, compare it with the new file using Emacs ediff
    if [ -e "$orig_file" ]; then
        /usr/local/bin/emacs_as_user.sh -nw --eval "(ediff-files \"$orig_file\" \"$new_file\")"
        # /usr/local/bin/ediff_as_root.sh "$orig_file" "$new_file"
    else
        echo "Original file $orig_file does not exist. You might want to manually handle $new_file."
    fi
}

# Find all .apk-new files
apk_new_files=$(find /etc -type f -name "*.apk-new")

# Check if there are any .apk-new files
if [ -z "$apk_new_files" ]; then
    echo "No .apk-new files found."
    exit 0
fi

# Convert the list of files into an array
apk_new_files_array=($apk_new_files)
total_files=${#apk_new_files_array[@]}

# Display the number of files
echo "Found $total_files .apk-new files."

# Prompt the user to choose between interactive or batch mode
echo "Choose mode:"
echo "1. Interactive"
echo "2. Batch"
read -p "Enter choice (1/2): " choice

case "$choice" in
    1)
        # Interactive Mode
        file_count=0
        while [ $file_count -lt $total_files ]; do
            new_file="${apk_new_files_array[$file_count]}"
            orig_file="${new_file%.apk-new}"

            # Call the comparison function
            compare_and_merge_interactive "$orig_file" "$new_file"

            # Increment the counter
            file_count=$((file_count + 1))

            # Prompt the user to continue or exit
            if [ $file_count -lt $total_files ]; then
                read -p "Processed $file_count of $total_files files. Do you want to continue? (y/n): " choice
                case "$choice" in
                    y|Y ) echo "Continuing...";;
                    n|N ) echo "Exiting..."; exit 0;;
                    * ) echo "Invalid choice. Exiting..."; exit 1;;
                esac
            fi
        done
        ;;
    2)
        # Batch Mode
        for new_file in "${apk_new_files_array[@]}"; do
            orig_file="${new_file%.apk-new}"

            # Call the comparison function
            compare_and_merge_batch "$orig_file" "$new_file"
        done
        ;;
    *)
        echo "Invalid choice. Exiting..."
        exit 1
        ;;
esac

echo "Processing completed."
